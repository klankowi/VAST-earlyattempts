scale_fill_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
geom_sf(fill='gray')+
coord_sf(xlim=c(-76, -65),
ylim=c(36,46),
crs="EPSG:4326")+
labs(title=paste0('Total abundance ',
names(test)[i],
' cod, 1982-2021')) +
theme(legend.position = c(0.90, 0.20))
p$labels$fill <- "Abund."
p$labels$colour <- "Abund."
plot(p)
ggplot() +
geom_sf(data=hard.agg)
ggplot() +
geom_sf(data=hard.agg) +
geom_sf(data=use.grid)
ggplot() +
geom_sf(data=hard.agg, col='blue') +
geom_sf(data=use.grid)
ggplot() +
geom_sf(data=hard.agg, col='blue') +
ggplot() +
geom_sf(data=hard.agg, col='blue') +
# Plot
p <- ggplot(ecodata::coast)+
geom_sf(data=use.grid, aes(fill=cod, col=cod)) +
geom_sf(data=hard.agg, col='blue', fill=NA) +
#geom_sf(data=wind.area, fill=NA, col='black')+
scale_color_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
scale_fill_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
geom_sf(fill='gray')+
coord_sf(xlim=c(-76, -65),
ylim=c(36,46),
crs="EPSG:4326")+
labs(title=paste0('Total abundance ',
names(test)[i],
' cod, 1982-2021')) +
theme(legend.position = c(0.90, 0.20))
p$labels$fill <- "Abund."
p$labels$colour <- "Abund."
plot(p)
mix.agg <- st_union(mix)
mix.agg <- st_transform(mix.agg, st_crs(use.grid))
for(i in 1:length(test)){
use.grid <- merge(test[[i]], abgrid, by=c('cell'))
st_geometry(use.grid) <- use.grid$abgrid
# Plot
p <- ggplot(ecodata::coast)+
geom_sf(data=use.grid, aes(fill=cod, col=cod)) +
geom_sf(data=hard.agg, col='blue', fill=NA) +
#geom_sf(data=wind.area, fill=NA, col='black')+
scale_color_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
scale_fill_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
geom_sf(fill='gray')+
coord_sf(xlim=c(-76, -65),
ylim=c(36,46),
crs="EPSG:4326")+
labs(title=paste0('Total abundance ',
names(test)[i],
' cod, 1982-2021')) +
theme(legend.position = c(0.90, 0.20))
p$labels$fill <- "Abund."
p$labels$colour <- "Abund."
plot(p)
# Save
ggsave(p,
filename =
paste0("C:/Users/klankowicz/Desktop/VAST_examples/Mapping3/abund_nowind/",
names(test)[i],
'_hard_totalabundance.png'),
device="png")
# Plot
pr <- ggplot(ecodata::coast)+
geom_sf(data=use.grid, aes(fill=cod, col=cod)) +
geom_sf(data=mix.agg, col='blue', fill=NA) +
#geom_sf(data=wind.area, fill=NA, col='black')+
scale_color_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
scale_fill_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
geom_sf(fill='gray')+
coord_sf(xlim=c(-76, -65),
ylim=c(36,46),
crs="EPSG:4326")+
labs(title=paste0('Total abundance ',
names(test)[i],
' cod, 1982-2021')) +
theme(legend.position = c(0.90, 0.20))
pr$labels$fill <- "Abund."
pr$labels$colour <- "Abund."
plot(pr)
# Save
ggsave(pr,
filename =
paste0("C:/Users/klankowicz/Desktop/VAST_examples/Mapping3/abund_nowind/",
names(test)[i],
'_mix_totalabundance.png'),
device="png")
}
# Set GGplot auto theme
theme_set(theme(plot.margin = unit(c(0.5,0.5,
0.5,0.5), "cm"),
panel.grid.major = element_line(color='lightgray'),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(color='black', size=1, fill=NA),
legend.title = element_text(size=12),
legend.text = element_text(size=10),
legend.background = element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14, angle=90, vjust=2),
plot.title=element_text(size=14, hjust = 0, vjust = 1.2),
plot.caption=element_text(hjust=0, face='italic', size=12),
strip.text = element_text(size=10)))
# Plot
p <- ggplot(ecodata::coast)+
geom_sf(data=use.grid, aes(fill=cod, col=cod)) +
geom_sf(data=hard.agg, col='blue', fill=NA) +
#geom_sf(data=wind.area, fill=NA, col='black')+
scale_color_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
scale_fill_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
geom_sf(fill='gray')+
coord_sf(xlim=c(-76, -65),
ylim=c(36,46),
crs="EPSG:4326")+
labs(title=paste0('Total abundance ',
names(test)[i],
' cod, 1982-2021')) +
theme(legend.position = c(0.90, 0.20)) +
guides(fill = guide_colourbar(label = FALSE))
p$labels$fill <- "Abund."
p$labels$colour <- "Abund."
plot(p)
for(i in 1:length(test)){
use.grid <- merge(test[[i]], abgrid, by=c('cell'))
st_geometry(use.grid) <- use.grid$abgrid
# Plot
p <- ggplot(ecodata::coast)+
geom_sf(data=use.grid, aes(fill=cod, col=cod)) +
geom_sf(data=hard.agg, col='blue', fill=NA) +
#geom_sf(data=wind.area, fill=NA, col='black')+
scale_color_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
scale_fill_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
geom_sf(fill='gray')+
coord_sf(xlim=c(-76, -65),
ylim=c(36,46),
crs="EPSG:4326")+
labs(title=paste0('Total abundance ',
names(test)[i],
' cod, 1982-2021')) +
theme(legend.position = c(0.90, 0.20))
p$labels$fill <- "Abund."
p$labels$colour <- "Abund."
plot(p)
# Save
ggsave(p,
filename =
paste0("C:/Users/klankowicz/Desktop/VAST_examples/Mapping3/abund_nowind/",
names(test)[i],
'_hard_totalabundance.png'),
device="png")
# Plot
pr <- ggplot(ecodata::coast)+
geom_sf(data=use.grid, aes(fill=cod, col=cod)) +
geom_sf(data=mix.agg, col='blue', fill=NA) +
#geom_sf(data=wind.area, fill=NA, col='black')+
scale_color_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
scale_fill_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
geom_sf(fill='gray')+
coord_sf(xlim=c(-76, -65),
ylim=c(36,46),
crs="EPSG:4326")+
labs(title=paste0('Total abundance ',
names(test)[i],
' cod, 1982-2021')) +
theme(legend.position = c(0.90, 0.20))
pr$labels$fill <- "Abund."
pr$labels$colour <- "Abund."
plot(pr)
# Save
ggsave(pr,
filename =
paste0("C:/Users/klankowicz/Desktop/VAST_examples/Mapping3/abund_nowind/",
names(test)[i],
'_mix_totalabundance.png'),
device="png")
}
for(i in 1:length(test)){
use.grid <- merge(test[[i]], abgrid, by=c('cell'))
st_geometry(use.grid) <- use.grid$abgrid
# Plot
p <- ggplot(ecodata::coast)+
geom_sf(data=use.grid, aes(fill=cod, col=cod)) +
geom_sf(data=hard.agg, col='blue', fill=NA) +
#geom_sf(data=wind.area, fill=NA, col='black')+
scale_color_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
scale_fill_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
geom_sf(fill='gray')+
coord_sf(xlim=c(-76, -65),
ylim=c(36,46),
crs="EPSG:4326")+
labs(title=paste0('Total abundance ',
names(test)[i],
' cod, hard substrate')) +
theme(legend.position = c(0.90, 0.20))
p$labels$fill <- "Abund."
p$labels$colour <- "Abund."
plot(p)
# Save
ggsave(p,
filename =
paste0("C:/Users/klankowicz/Desktop/VAST_examples/Mapping3/abund_nowind/",
names(test)[i],
'_hard_totalabundance.png'),
device="png")
# Plot
pr <- ggplot(ecodata::coast)+
geom_sf(data=use.grid, aes(fill=cod, col=cod)) +
geom_sf(data=mix.agg, col='blue', fill=NA) +
#geom_sf(data=wind.area, fill=NA, col='black')+
scale_color_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
scale_fill_viridis_c(#limits=c(0.01, max.D),
na.value = 'transparent',
option=('rocket'),
direction = -1,
alpha = 0.8) +
geom_sf(fill='gray')+
coord_sf(xlim=c(-76, -65),
ylim=c(36,46),
crs="EPSG:4326")+
labs(title=paste0('Total abundance ',
names(test)[i],
' cod, mixed substrate')) +
theme(legend.position = c(0.90, 0.20))
pr$labels$fill <- "Abund."
pr$labels$colour <- "Abund."
plot(pr)
# Save
ggsave(pr,
filename =
paste0("C:/Users/klankowicz/Desktop/VAST_examples/Mapping3/abund_nowind/",
names(test)[i],
'_mix_totalabundance.png'),
device="png")
}
rm(list=ls())
# Load library
library(tidyverse)
library(sf)
library(here)
library(TSP)
library(udunits2)
# Set seed
set.seed(5423)
# Set GGplot auto theme
theme_set(theme(plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
panel.grid.major = element_line(color='lightgray'),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(color='black', size=1, fill=NA),
legend.title = element_text(size=12),
legend.text = element_text(size=10),
legend.background = element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14, angle=90, vjust=2),
plot.title=element_text(size=16, hjust = 0, vjust = 1.2),
plot.caption=element_text(hjust=0, face='italic', size=12)))
# Load stations
stations <- read.csv(here('possible_tsplocs.csv'))
head(stations)
# Create depth strata
stations$BATHY.DEPTH <- stations$BATHY_DEPT * -1
stations$dep.strat[stations$BATHY.DEPTH < 110] <- 'shallow'
stations$dep.strat[stations$BATHY.DEPTH >= 110] <- 'deep'
stations <- dplyr::select(stations,
YEAR, LON, LAT,
endlon, endlat,
SURVEY, STRATUM,
DEPTH, BATHY.DEPTH, dep.strat,
BOTTOM_TYP, COND
)
table(stations$dep.strat, stations$SURVEY)
table(stations$COND, stations$SURVEY)
stations$id <- seq(1, nrow(stations))
stations <- st_as_sf(stations, coords=c('LON', 'LAT'))
st_crs(stations) <- "EPSG:4326"
# Load coast
coast <- ecodata::coast
coast <- st_transform(coast, crs='EPSG:4326')
# Load Portland dock
portland <- data.frame(
lon = -70.255005,
lat = 43.651156,
SURVEY = 'Portland',
STRATUM = NA,
DEPTH = NA,
BATHY.DEPTH = NA,
dep.strat = NA,
BOTTOM_TYP = NA,
COND = NA)
portland <- st_as_sf(portland, coords=c('lon', 'lat'))
st_crs(portland) <- 'EPSG:4326'
# Plot basic
ggplot() +
geom_sf(data=coast) +
geom_sf(data=stations, cex=1,
aes(col=SURVEY)) +
geom_sf(data=portland) +
coord_sf(xlim=c(-71, -68.95),
ylim=c(41.95, 43.65)) +
ylab('Latitude') +
xlab('Longitude')
# Split to surveys
blls <- subset(stations, SURVEY == "NEFSC BLLS")
bts <- subset(stations, SURVEY == 'NEFSC BTS')
# Check strata distribution
table(blls$dep.strat, blls$COND)
table(bts$dep.strat, bts$COND)
# Random selection
selecdf <- data.frame(
SURVEY = c(rep('NEFSC BLLS', 4), rep('NEFSC BTS', 4)),
dep.strat = rep(c('shallow', 'deep'), 4),
COND = rep(c('ROUGH', 'ROUGH', 'SMOOTH', 'SMOOTH'), 2)
)
selecdf.blls <- subset(selecdf, SURVEY == 'NEFSC BLLS')
selecdf.bts <- subset(selecdf, SURVEY == "NEFSC BTS")
rm(selecdf)
stations_blank <- stations[1,]
stations_blank$id <- NA
for(i in 1:nrow(selecdf.blls)){
stratcombo <- subset(stations,
stations$SURVEY == selecdf.blls$SURVEY[i] &
stations$dep.strat == selecdf.blls$dep.strat[i] &
stations$COND == selecdf.blls$COND[i])
workingwith <- nrow(stratcombo)
message(i)
print(workingwith)
if(workingwith >= 25){
rowsuse <- seq(1, workingwith)
rowsuse <- sample(rowsuse, 25, replace=F)
stratcombo <- stratcombo[rowsuse,]
}
stations_blank <- rbind(stations_blank, stratcombo)
}
stations_blank <- stations_blank[!is.na(stations_blank$id),]
for(i in 1:nrow(selecdf.bts)){
stratcombo <- subset(stations,
stations$SURVEY == selecdf.bts$SURVEY[i] &
stations$dep.strat == selecdf.bts$dep.strat[i] &
stations$COND == selecdf.bts$COND[i])
workingwith <- nrow(stratcombo)
message(i)
print(workingwith)
if(workingwith >= 25){
rowsuse <- seq(1, workingwith)
rowsuse <- sample(rowsuse, 26, replace=F)
stratcombo <- stratcombo[rowsuse,]
}
if(workingwith < 25){
rowsuse <- seq(1, workingwith)
rowsuse <- sample(rowsuse, 22, replace=F)
stratcombo <- stratcombo[rowsuse,]
}
stations_blank <- rbind(stations_blank, stratcombo)
}
stations_blank <- stations_blank[!is.na(stations_blank$id),]
table(stations_blank$SURVEY)
table(stations_blank$SURVEY, stations_blank$dep.strat)
table(stations_blank$SURVEY, stations_blank$COND)
rand.points <- stations[stations$id %in% stations_blank$id,]
# Load Portland dock
portland <- data.frame(
id = "Portland",
YEAR = NA,
lon = -70.255005,
lat = 43.651156,
endlon = NA,
endlat = NA,
SURVEY = 'Portland',
STRATUM = NA,
DEPTH = NA,
BATHY.DEPTH = NA,
dep.strat = NA,
BOTTOM_TYP = NA,
COND = NA)
portland <- st_as_sf(portland, coords=c('lon', 'lat'))
st_crs(portland) <- 'EPSG:4326'
rand.points <- rbind(portland, rand.points)
row.names(rand.points) <- NULL
head(rand.points)
length(unique(rand.points$id))
rand.points[1, "endlon"] <- -70.255004
rand.points[1, "endlat"] <- 43.651155
# Remove intermediates
rm(blls, bts, portland, selecdf.blls, selecdf.bts,
stations, stations_blank, stratcombo, i, rowsuse, workingwith)
# Plot basic
ggplot() +
geom_sf(data=coast) +
geom_sf(data=rand.points, cex=1,
aes(col=SURVEY)) +
#geom_sf(data=portland) +
coord_sf(xlim=c(-71, -68.95),
ylim=c(41.95, 43.65)) +
ylab('Latitude') +
xlab('Longitude')
# Traveling salesperson problem - what is the most efficient order to get these
tsp <- ((st_distance(rand.points)))
colnames(tsp) <- rand.points$id
tsp <- TSP(as.dist(tsp))
tour.list <- vector(mode='list', 100)
for(i in 1:length(tour.list)){
tour.list[[i]] <- solve_TSP(tsp, method = 'farthest_insertion')
}
length.list <- vector(mode='list', 100)
for(i in 1:length(length.list)){
length.list[[i]] <- tour_length(tour.list[[i]])
}
length.list <- do.call(rbind, length.list)
length.list <- as.data.frame(length.list)
length.list$run <- seq(1, nrow(length.list))
shortest.run <- length.list$run[length.list$V1 == min(length.list$V1)]
# Shortest path of 100 runs
path <- cut_tour(tour.list[[shortest.run]], "Portland", exclude_cut = FALSE)
path.lines <- st_sfc(
st_cast(
do.call(c, st_geometry(rand.points[c(path),])),
'LINESTRING'
), crs = 4326
)
path.lines <- st_as_sf(path.lines)
path.lines <- nngeo::st_segments(path.lines, progress = TRUE)
path.lines$id <- seq(1:nrow(path.lines))
names(path)
tsp
# Traveling salesperson problem - what is the most efficient order to get these
tsp <- ((st_distance(rand.points)))
tsp
max(tsp)
tsp[which(max(tsp))]
which(tsp == max(tsp), arr.ind = TRUE)
rm(list=ls())
rm(list=ls())
# Load libraries
library(tidyverse)
