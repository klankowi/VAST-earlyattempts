( pred.orig <- cf*bias.pred.orig )
pred2.log <- predict(lm1,data.frame(logL=log(cuts2)),interval="c")
bias2.pred.orig <- exp(pred2.log)
pred2.orig <- cf*bias2.pred.orig
wts2 <- pred2.orig$fit
pred2.orig
pred2.orig['fit']
pred2.orig[1]
wts2 <- pred2.orig[1]
pred5.log <- predict(lm1,data.frame(logL=log(cuts5)),interval="c")
bias5.pred.orig <- exp(pred\5.log)
pred5.orig <- cf*bias5.pred.orig
bias5.pred.orig <- exp(pred5.log)
pred5.orig <- cf*bias5.pred.orig
wts5 <- pred5.orig[1]
wts5
wts2
ggplot(data=ruffe2, aes(x=AGE, y=WEIGHT)) +
geom_boxplot(aes(group=AGE)) +
geom_point(x=2, y=wts2)
ggplot(data=ruffe2, aes(x=AGE, y=WEIGHT)) +
geom_boxplot(aes(group=AGE)) +
geom_point(x=2, y=wts2, col='red')
table(ruffe2$AGE)
summary(ruffe2$AGE)
ggplot(data=ruffe2, aes(x=AGE, y=WEIGHT)) +
geom_boxplot(aes(group=AGE)) +
geom_point(x=2, y=wts2, col='red') +
geom_point(x=5, y=wts5, col='red')
ggplot(data=ruffe2[ruffe2$AGE < 15 & !is.na(ruffe2$AGE)], aes(x=AGE, y=WEIGHT)) +
geom_boxplot(aes(group=AGE)) +
geom_point(x=2, y=wts2, col='red') +
geom_point(x=5, y=wts5, col='red')
ggplot(data=ruffe2[ruffe2$AGE < 15 & !is.na(ruffe2$AGE),], aes(x=AGE, y=WEIGHT)) +
geom_boxplot(aes(group=AGE)) +
geom_point(x=2, y=wts2, col='red') +
geom_point(x=5, y=wts5, col='red')
table(bad.biomass$LENGTH_CM)
#### Assign age by length ####
# Create new age grouping column
bioda$LENAGE <- NA
head(bad.biomass)
tail(bad.biomass)
i
#### Assign age by length ####
# Create new age grouping column
bioda$LENAGE <- NA
# Loop through rows
for(i in 1:nrow(bioda)){
# Age 0-2 cutoff
if(bioda$LENGTH_CM[i] <= cuts2){
bioda$LENAGE[i] <- 0
}
# Ages 2-5
if(bioda$LENGTH_CM[i] > cuts2 & bioda$LENGTH_CM[i] <=cuts5){
bioda$LENAGE[i] <- 3
}
# Age 5 cutoff
if(bioda$LENGTH_CM[i] > cuts5){
bioda$LENAGE[i] <- 6
}
}
# View results
table(bioda$LENAGE)
nrow(bioda[is.na(bioda$LENAGE)==TRUE,])
# Pull out data that has provided age
bioage <- subset(bioda, is.na(bioda$AGE)==FALSE)
# Reassign age for those data
bioage$LENAGE <- bioage$AGE
# Pull out data that does not have provided age
bioage.noage <- subset(bioda, is.na(bioda$AGE)==TRUE)
# Recombine to make full dataset
bioda <- rbind(bioage, bioage.noage)
# View results
table(bioda$LENAGE)
# Create new age grouping column
bioda$AGEGROUP <- NA
# Loop through rows
for(i in 1:nrow(bioda)){
# Age 0-2 cutoff
if(bioda$LENAGE[i] <= 2){
bioda$AGEGROUP[i] <- 'Age0-2'
}
# Age 2-5
if(bioda$LENAGE[i] > 2 & bioda$LENAGE[i] <=5){
bioda$AGEGROUP[i] <- 'Age2-5'
}
# Age 5 cutoff
if(bioda$LENAGE[i] > 5){
bioda$AGEGROUP[i] <- 'Age5+'
}
}
# View results
table(bioda$AGEGROUP)
nrow(bioda[is.na(bioda$AGEGROUP)==TRUE,])
head(bioda)
# Remove intermediates
rm(bioage, bioage.noage)
# Split by haul
bioda.list <- split(bioda, f=bioda$HAUL_ID)
# Loop through hauls
for(i in
1:
#8000:
length(bioda.list)
#10000
){
# Pull out biodata associated with haul
biotemp <- bioda.list[[i]]
head(biotemp)
# Pull out survey data associated with haul
survtemp <- surv[surv$HAUL_ID == biotemp$HAUL_ID[1],]
head(survtemp)
# Create row for each eage group
survtemp.all <- rbind(survtemp, survtemp, survtemp)
survtemp.all$AGEGROUP <- c('Age0-2', 'Age2-5', 'Age5+')
head(survtemp.all)
# Assign cod_n
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age0-2"] <-
nrow(biotemp[biotemp$AGEGROUP == "Age0-2",])
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age2-5"] <-
nrow(biotemp[biotemp$AGEGROUP == "Age2-5",])
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age5+"] <-
nrow(biotemp[biotemp$AGEGROUP == "Age5+",])
# Assign cod_kg
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age0-2"] <-
sum(biotemp$WEIGHT[biotemp$AGEGROUP == "Age0-2"], na.rm=T)
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age2-5"] <-
sum(biotemp$WEIGHT[biotemp$AGEGROUP == "Age2-5"], na.rm=T)
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age5+"] <-
sum(biotemp$WEIGHT[biotemp$AGEGROUP == "Age5+"], na.rm=T)
head(survtemp.all)
# when only one age group has cod and AGE_KG==NA and COD_KG !=NA, assign AGE_KG as COD_KG.
group.nums <- as.vector(survtemp.all$AGE_N)
length.zeros <- length(group.nums[group.nums == 0])
if(length.zeros == 2 & is.na(survtemp.all$COD_KG[1])==FALSE){
survtemp.all$AGE_KG[survtemp.all$AGE_N != 0] <- survtemp.all$COD_KG[1]
}
# Flag when COD_N != sum(AGE_N) plus/minus 1
survtemp.all$FLAG_N <- 0
approp.range <- c(survtemp.all$COD_N[1] - 1,
survtemp.all$COD_N[1],
survtemp.all$COD_N[1] + 1)
if(sum(survtemp.all$AGE_N) %notin% approp.range){
survtemp.all$FLAG_N <- 1
}
# N differences
survtemp.all$HAUL_DIF_N <- survtemp.all$COD_N[1] - sum(survtemp.all$AGE_N)
# Flag when COD_KG != sum(AGE_KG)
survtemp.all$FLAG_KG <- 0
if(sum(survtemp.all$AGE_KG) != survtemp.all$COD_KG[1] & is.na(survtemp.all$COD_KG[1])==FALSE){
survtemp.all$FLAG_KG <- 1
}
# KG differences
survtemp.all$HAUL_DIF_KG <- NA
if(is.na(survtemp.all$COD_KG[1])== FALSE){
survtemp.all$HAUL_DIF_KG <- survtemp.all$COD_KG[1] - sum(survtemp.all$AGE_KG)
}
# Assign data type
if(nrow(biotemp[is.na(biotemp$WEIGHT)==TRUE,]) == nrow(biotemp)){
survtemp.all$Data_type <- 'Count'
}
if(nrow(biotemp[is.na(biotemp$WEIGHT)==TRUE,]) != nrow(biotemp)){
survtemp.all$Data_type <- 'Biomass_KG'
}
if(is.na(survtemp.all$COD_KG[1])==FALSE & sum(survtemp.all$AGE_KG) == survtemp.all$COD_KG[1]){
survtemp.all$Data_type <- 'Biomass_KG'
}
bioda.list[[i]] <- survtemp.all
rm(biotemp, survtemp, survtemp.all, group.nums, length.zeros, approp.range)
}
test <- do.call(rbind, bioda.list)
row.names(test) <- NULL
head(test)
table(test$Data_type)
table(test$SURVEY)
table(test$SURVEY, test$FLAG_N)
table(test$SURVEY, test$FLAG_KG)
table(test$SURVEY, test$Data_type)
#### Encounter data ####
enc <- surv[surv$HAUL_ID %notin% test$HAUL_ID,]
table(enc$SURVEY)
enc.0 <- subset(enc, enc$COD_N == 0)
enc.0.age0 <- enc.0; enc.0.age0$AGEGROUP <- 'Age0-2'
enc.0.age1 <- enc.0; enc.0.age1$AGEGROUP <- 'Age2-5'
enc.0.age2 <- enc.0; enc.0.age2$AGEGROUP <- 'Age5+'
enc.0 <- rbind(enc.0.age0, enc.0.age1, enc.0.age2)
enc.0$AGE_N <- 0; enc.0$AGE_KG <- 0; enc.0$FLAG_N <- 0; enc.0$HAUL_DIF_N <- 0
enc.0$FLAG_KG <- 0; enc.0$HAUL_DIF_KG <- 0; enc.0$Data_type <- 0
head(enc.0)
head(test)
test <- rbind(test, enc.0)
rm(enc.0, enc.0.age0, enc.0.age1, enc.0.age2)
enc.n0 <- subset(enc, enc$COD_KG != 0)
enc.n1 <- subset(enc.n0, enc.n0$COD_N == 1)
head(enc.n1)
enc.unk <- subset(enc.n0, enc.n0$COD_N != 1)
enc.n1.list <- split(enc.n1, f=enc.n1$HAUL_ID)
# Pull out biodata associated with haul
biotemp <- enc.n1.list[[i]]
i=1
# Pull out biodata associated with haul
biotemp <- enc.n1.list[[i]]
head(biotemp)
# Pull out survey data associated with haul
survtemp <- surv[surv$HAUL_ID == biotemp$HAUL_ID[1],]
head(survtemp)
# Create row for each eage group
survtemp.all <- rbind(survtemp, survtemp, survtemp)
survtemp.all$AGEGROUP <- c('Age0-2', 'Age2-5', 'Age5+')
head(survtemp.all)
biotemp
# Assign cod_n
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age0-2"] <-
nrow(biotemp[biotemp$AGEGROUP == "Age0-2",])
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age2-5"] <-
nrow(biotemp[biotemp$AGEGROUP == "Age2-5",])
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age5+"] <-
nrow(biotemp[biotemp$AGEGROUP == "Age5+",])
head(survtemp.all)
biotemp
wts2
wts5
biotemp$COD_KG <=wts2
# Assign cod_n
if(biotemp$COD_KG <=wts2){
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age0-2"] <- 1
}
survtemp.all
# Assign cod_n
if(biotemp$COD_KG <=wts2){
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age0-2"] <- 1
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age0-2"] <- biotemp$COD_KG
}
survtemp
survtemp.all
enc.n1.list <- split(enc.n1, f=enc.n1$HAUL_ID)
for(i in 1:length(enc.n1.list)){
# Pull out biodata associated with haul
biotemp <- enc.n1.list[[i]]
head(biotemp)
# Pull out survey data associated with haul
survtemp <- surv[surv$HAUL_ID == biotemp$HAUL_ID[1],]
head(survtemp)
# Create row for each eage group
survtemp.all <- rbind(survtemp, survtemp, survtemp)
survtemp.all$AGEGROUP <- c('Age0-2', 'Age2-5', 'Age5+')
head(survtemp.all)
# Assign cod_n and cod_kg
if(biotemp$COD_KG <=wts2){
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age0-2"] <- 1
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age0-2"] <- biotemp$COD_KG
}
if(biotemp$COD_KG > wts2 & biotemp$COD_KG <=wts5){
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age2-5"] <- 1
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age2-5"] <- biotemp$COD_KG
}
if(biotemp$COD_KG  > wts5){
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age5+"] <- 1
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age5+"] <- biotemp$COD_KG
}
head(survtemp.all)
# when only one age group has cod and AGE_KG==NA and COD_KG !=NA, assign AGE_KG as COD_KG.
group.nums <- as.vector(survtemp.all$AGE_N)
length.zeros <- length(group.nums[group.nums == 0])
if(length.zeros == 2 & is.na(survtemp.all$COD_KG[1])==FALSE){
survtemp.all$AGE_KG[survtemp.all$AGE_N != 0] <- survtemp.all$COD_KG[1]
}
# Flag when COD_N != sum(AGE_N) plus/minus 1
survtemp.all$FLAG_N <- 0
approp.range <- c(survtemp.all$COD_N[1] - 1,
survtemp.all$COD_N[1],
survtemp.all$COD_N[1] + 1)
if(sum(survtemp.all$AGE_N) %notin% approp.range){
survtemp.all$FLAG_N <- 1
}
# N differences
survtemp.all$HAUL_DIF_N <- survtemp.all$COD_N[1] - sum(survtemp.all$AGE_N)
# Flag when COD_KG != sum(AGE_KG)
survtemp.all$FLAG_KG <- 0
if(sum(survtemp.all$AGE_KG) != survtemp.all$COD_KG[1] & is.na(survtemp.all$COD_KG[1])==FALSE){
survtemp.all$FLAG_KG <- 1
}
# KG differences
survtemp.all$HAUL_DIF_KG <- NA
if(is.na(survtemp.all$COD_KG[1])== FALSE){
survtemp.all$HAUL_DIF_KG <- survtemp.all$COD_KG[1] - sum(survtemp.all$AGE_KG)
}
# Assign data type
if(nrow(biotemp[is.na(biotemp$WEIGHT)==TRUE,]) == nrow(biotemp)){
survtemp.all$Data_type <- 'Count'
}
if(nrow(biotemp[is.na(biotemp$WEIGHT)==TRUE,]) != nrow(biotemp)){
survtemp.all$Data_type <- 'Biomass_KG'
}
if(is.na(survtemp.all$COD_KG[1])==FALSE & sum(survtemp.all$AGE_KG) == survtemp.all$COD_KG[1]){
survtemp.all$Data_type <- 'Biomass_KG'
}
enc.n1.list[[i]] <- survtemp.all
rm(biotemp, survtemp, survtemp.all, group.nums, length.zeros, approp.range)
}
i
enc.n1.list <- split(enc.n1, f=enc.n1$HAUL_ID)
for(i in 1:length(enc.n1.list)){
# Pull out biodata associated with haul
biotemp <- enc.n1.list[[i]]
head(biotemp)
# Pull out survey data associated with haul
survtemp <- surv[surv$HAUL_ID == biotemp$HAUL_ID[1],]
head(survtemp)
# Create row for each eage group
survtemp.all <- rbind(survtemp, survtemp, survtemp)
survtemp.all$AGEGROUP <- c('Age0-2', 'Age2-5', 'Age5+')
head(survtemp.all)
# Assign cod_n and cod_kg
if(biotemp$COD_KG <=wts2){
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age0-2"] <- 1
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age0-2"] <- biotemp$COD_KG
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age2-5"] <- 0
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age2-5"] <- 0
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age5+"] <- 0
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age5+"] <- 0
}
if(biotemp$COD_KG > wts2 & biotemp$COD_KG <=wts5){
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age2-5"] <- 1
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age2-5"] <- biotemp$COD_KG
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age0-2"] <- 0
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age0-2"] <- 0
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age5+"] <- 0
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age5+"] <- 0
}
if(biotemp$COD_KG  > wts5){
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age5+"] <- 1
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age5+"] <- biotemp$COD_KG
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age2-5"] <- 0
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age2-5"] <- 0
survtemp.all$AGE_N[survtemp.all$AGEGROUP == "Age0-2"] <- 0
survtemp.all$AGE_KG[survtemp.all$AGEGROUP == "Age0-2"] <- 0
}
head(survtemp.all)
# when only one age group has cod and AGE_KG==NA and COD_KG !=NA, assign AGE_KG as COD_KG.
group.nums <- as.vector(survtemp.all$AGE_N)
length.zeros <- length(group.nums[group.nums == 0])
if(length.zeros == 2 & is.na(survtemp.all$COD_KG[1])==FALSE){
survtemp.all$AGE_KG[survtemp.all$AGE_N != 0] <- survtemp.all$COD_KG[1]
}
# Flag when COD_N != sum(AGE_N) plus/minus 1
survtemp.all$FLAG_N <- 0
approp.range <- c(survtemp.all$COD_N[1] - 1,
survtemp.all$COD_N[1],
survtemp.all$COD_N[1] + 1)
if(sum(survtemp.all$AGE_N) %notin% approp.range){
survtemp.all$FLAG_N <- 1
}
# N differences
survtemp.all$HAUL_DIF_N <- survtemp.all$COD_N[1] - sum(survtemp.all$AGE_N)
# Flag when COD_KG != sum(AGE_KG)
survtemp.all$FLAG_KG <- 0
if(sum(survtemp.all$AGE_KG) != survtemp.all$COD_KG[1] & is.na(survtemp.all$COD_KG[1])==FALSE){
survtemp.all$FLAG_KG <- 1
}
# KG differences
survtemp.all$HAUL_DIF_KG <- NA
if(is.na(survtemp.all$COD_KG[1])== FALSE){
survtemp.all$HAUL_DIF_KG <- survtemp.all$COD_KG[1] - sum(survtemp.all$AGE_KG)
}
# Assign data type
if(nrow(biotemp[is.na(biotemp$WEIGHT)==TRUE,]) == nrow(biotemp)){
survtemp.all$Data_type <- 'Count'
}
if(nrow(biotemp[is.na(biotemp$WEIGHT)==TRUE,]) != nrow(biotemp)){
survtemp.all$Data_type <- 'Biomass_KG'
}
if(is.na(survtemp.all$COD_KG[1])==FALSE & sum(survtemp.all$AGE_KG) == survtemp.all$COD_KG[1]){
survtemp.all$Data_type <- 'Biomass_KG'
}
enc.n1.list[[i]] <- survtemp.all
rm(biotemp, survtemp, survtemp.all, group.nums, length.zeros, approp.range)
}
test2 <- do.call(rbind, enc.n1.list)
rownames(test2) <- NULL
summary(test2)
table(test2$Data_type)
test <- rbind(test, test2)
rm(enc.0, enc.n1, enc.n1.list)
rm(enc.n0, enc.n1, enc.n1.list)
enc.unk <- subset(enc, enc$COD_N != 1 & enc$COD_N !=0)
table(enc.unk$COD_N)
setwd("C:/Users/klankowicz/Desktop/VAST_examples/catchability_combine")
# Load packages
library(VAST)
# load data set
# see `?load_example` for list of stocks with example data
# that are installed automatically with `FishStatsUtils`.
example = load_example( data_set="multimodal_red_snapper" )
# Make settings
settings = make_settings( n_x = 100,
Region = example$Region,
purpose = "index",
strata.limits = example$strata.limits )
# Make settings
settings = make_settings( n_x = 100,
Region = example$Region,
purpose = "index2",
strata.limits = example$strata.limits )
# Change `ObsModel` to indicate type of data for level of `e_i`
settings$ObsModel = cbind( c(13,14,2), 1 )
# Add a design matrix representing differences in catchability relative to a reference (biomass-sampling) gear
catchability_data = example$sampling_data[,'Data_type',drop=FALSE]
Q1_formula = ~ factor(Data_type)
setwd("C:/Users/klankowicz/Desktop/VAST_examples/catchability_combine")
# Run model
fit = fit_model( settings = settings,
Lat_i = example$sampling_data[,'Lat'],
Lon_i = example$sampling_data[,'Lon'],
t_i = example$sampling_data[,'Year'],
c_i = rep(0,nrow(example$sampling_data)),
b_i = example$sampling_data[,'Response_variable'],
a_i = example$sampling_data[,'AreaSwept_km2'],
e_i = as.numeric(example$sampling_data[,'Data_type'])-1,
Q1_formula = Q1_formula,
catchability_data = catchability_data )
settings
# Download release number 3.6.0; its useful for reproducibility to use a specific release number
remove.packages('VAST')
remove.packages(c('VAST', 'INLA', 'TMB', 'FishStatsUtils'))
remove.packages(c('INLA', 'TMB', 'FishStatsUtils'))
remove.packages('INLA')
remove.packages('TMB')
remove.packages('FishStatsUtils')
devtools::install_github("James-Thorson-NOAA/VAST", ref="3.6.0")
rm(list=ls())
# Load packages
library(VAST)
library(tidyverse)
# load data set
# see `?load_example` for list of stocks with example data
# that are installed automatically with `FishStatsUtils`.
example = load_example( data_set="multimodal_red_snapper" )
example$sampling_data <- subset(example$sampling_data,
Data_type != "Encounter")
example$sampling_data <- droplevels(example$sampling_data)
temp <- example$sampling_data
temp.1 <- temp %>%
mutate(Age = 0)
temp.2 <- temp %>%
mutate(Age = 1)
temp.2$Response_variable <- sample(temp.2$Response_variable,
length(temp.2$Response_variable),
replace = F)
example$sampling_data <- rbind(temp.1, temp.2)#, temp.3)#, temp.4)
# Make settings
settings = make_settings( n_x = 500,
Region = example$Region,
purpose = "index2",
strata.limits = example$strata.limits )
# Change `ObsModel` to indicate type of data for level of `e_i`
settings$ObsModel = cbind( c(14,2), 1 )
# Add a design matrix representing differences in catchability relative to a reference (biomass-sampling) gear
catchability_data = example$sampling_data[,'Data_type',drop=FALSE]
Q1_formula = ~ factor(Data_type)
setwd("C:/Users/klankowicz/Desktop/VAST_examples/catchability_combine")
rm(covars, multimodal_red_snapper_example, temp, temp.1, temp.2)
gc()
# Run model
fit = fit_model(
# Call settings
settings = settings,
# Call survey data info
Lat_i = example$sampling_data[,'Lat'],
Lon_i = example$sampling_data[,'Lon'],
t_i = example$sampling_data[,'Year'],
b_i = example$sampling_data[,'Response_variable'],
a_i = example$sampling_data[,'AreaSwept_km2'],
#v_i = example$sampling_data[,'vessel'],
c_i = example$sampling_data[,'Age'],
e_i = as.numeric(example$sampling_data[,'Data_type'])-1,
# Call catchability info
Q1_formula = Q1_formula,
catchability_data = catchability_data,
# Call covariate info
#X1_formula = ~fake1 + fake2 + fake3 + fake4 + fake5 + fake6 + fake7 + fake8,
#covariate_data = scaled.covars
)
rm(list=ls())
# Load packages
library(VAST)
# load data set
# see `?load_example` for list of stocks with example data
# that are installed automatically with `FishStatsUtils`.
example = load_example( data_set="multimodal_red_snapper" )
# Make settings
settings = make_settings( n_x = 100,
Region = example$Region,
purpose = "index",
strata.limits = example$strata.limits )
# Change `ObsModel` to indicate type of data for level of `e_i`
settings$ObsModel = cbind( c(13,14,2), 1 )
# Add a design matrix representing differences in catchability relative to a reference (biomass-sampling) gear
catchability_data = example$sampling_data[,'Data_type',drop=FALSE]
Q1_formula = ~ factor(Data_type)
# Run model
fit = fit_model( settings = settings,
Lat_i = example$sampling_data[,'Lat'],
Lon_i = example$sampling_data[,'Lon'],
t_i = example$sampling_data[,'Year'],
c_i = rep(0,nrow(example$sampling_data)),
b_i = example$sampling_data[,'Response_variable'],
a_i = example$sampling_data[,'AreaSwept_km2'],
e_i = as.numeric(example$sampling_data[,'Data_type'])-1,
Q1_formula = Q1_formula,
catchability_data = catchability_data )
