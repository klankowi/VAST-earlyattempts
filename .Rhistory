which(settings[,1]=="$FieldConfig")+4),2])
beta1 <- "IID"
beta2 <- "IID"
}
#RhoConfig
rho_beta1 <- as.numeric(as.character(settings[(
which(settings[,1]=="$RhoConfig")+3),1]))
rho_beta2 <- as.numeric(as.character(settings[(
which(settings[,1]=="$RhoConfig")+3),2]))
rho_epsilon1 <- as.numeric(as.character(settings[(
which(settings[,1]=="$RhoConfig")+4),1]))
rho_epsilon2 <- as.numeric(as.character(settings[(
which(settings[,1]=="$RhoConfig")+4),2]))
# read parameter estimates, object is called parameter_Estimates
load(file.path(d.name, "parameter_estimates.RData"))
AIC <- parameter_estimates$AIC[1]
converged <- parameter_estimates$Convergence_check[1]
fixedcoeff <- unname(parameter_estimates$number_of_coefficients[2])
randomcoeff <- unname(parameter_estimates$number_of_coefficients[3])
# return model atributes as a dataframe
out <- data.frame(modname = modname,
n_x = n_x,
grid_size_km = grid_size_km,
max_cells = max_cells,
use_anisotropy = use_anisotropy,
fine_scale =  fine_scale,
bias.correct = bias.correct,
omega1 = omega1,
omega2 = omega2,
epsilon1 = epsilon1,
epsilon2 = epsilon2,
beta1 = beta1,
beta2 = beta2,
rho_epsilon1 = rho_epsilon1,
rho_epsilon2 = rho_epsilon2,
rho_beta1 = rho_beta1,
rho_beta2 = rho_beta2,
AIC = AIC,
converged = converged,
fixedcoeff = fixedcoeff,
randomcoeff = randomcoeff
)
return(out)
}
# combine into one table for comparison
modselect <- purrr::map_dfr(moddirs, getmodinfo)
# Build table to compare models
modselect.cov <- modselect %>%
filter(n_x == 200) %>%
#filter(str_detect(modname, "base|eta|len|_no$")) %>%
# mutate(converged2 = case_when(str_detect(converged,
#                                          "no evidence") ~ "likely",
#                               str_detect(converged,
#                                          "is likely not") ~ "unlikely",
#                               TRUE ~ as.character(NA))) %>%
mutate(deltaAIC = AIC-min(AIC)) %>%
select(modname, deltaAIC, fixedcoeff,
randomcoeff, use_anisotropy,
omega1, omega2, epsilon1, epsilon2,
beta1, beta2, AIC) %>%
arrange(AIC)
# Print table
DT::datatable(modselect.cov, rownames = FALSE,
options= list(pageLength = 25, scrollX = TRUE))
modnames
# read settings
modpath <- stringr::str_split(d.name, "/", simplify = TRUE)
d.name <- 'alleta11'
# read settings
modpath <- stringr::str_split(d.name, "/", simplify = TRUE)
modpath
modname <- modpath[length(modpath)]
modname
n_x <- as.numeric(as.character(settings[(which(settings[,1]=="$n_x")+1),2]))
AIC <- parameter_estimates$AIC[1]
load("~/GitHub/VAST-earlyattempts/covar_selection/alleta11/parameter_estimates.RData")
parameter_estimates$AIC
53123.96 - parameter_estimates$AIC
#### Workspace setup ####
# Clear workspace
rm(list=ls())
# Load libraries
# IMPORTANT NOTE: VAST must be running >=V14, will not work with V13.
library(units)
library(VAST)
library(here)
library(tidyverse)
library(beepr)
library(sf)
library(rgdal)
library(sp)
library(ggcorrplot)
# Set GGplot auto theme
theme_set(theme(panel.grid.major = element_line(color='lightgray'),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(color='black', size=1, fill=NA),
legend.position = "bottom",
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14, angle=90, vjust=2),
plot.title=element_text(size=14, hjust = 0, vjust = 1.2),
plot.caption=element_text(hjust=0, face='italic', size=12)))
# Negate function
'%notin%' <- function(x,y)!('%in%'(x,y))
#### Add sample information and covars ####
# Load data
surveys <- read.csv(here("data/Dataframes/Bio_Data_Agesep3.csv"))
# Remove data from 2022 (incomplete)
ex <- subset(surveys, YEAR < 2022)
ex$RESPONSE <- ceiling(ex$AGE_N)
# Check that there are no missing responses
nrow(ex[is.na(ex$RESPONSE)==TRUE,])
# Add environmental data
env <- readRDS(here("data/RData_Storage/agg_stn_all_OISST.RDS"))
env <- sfheaders::sf_to_df(env, fill=T)
env <- dplyr::select(env,
HAUL_ID, cobble_P, gravel_P, rock_P, mud_P, sand_P,
BATHY.DEPTH, oisst)
ex2 <- left_join(ex, env, by="HAUL_ID")
# Add annoying rugosity data
rugos <- readRDS(here("data/RData_Storage/agg_stn_all_OISST_agesep2.RDS"))
rugos <- sfheaders::sf_to_df(rugos, fill=T)
rugos <- dplyr::select(rugos, HAUL_ID, rugos)
rugos <- unique(rugos)
ex3 <- left_join(ex2, rugos, by="HAUL_ID")
ex4 <- subset(ex3, !is.na(ex3$rugos))
# Remove BLLS
ex4 <- subset(ex4, SURVEY != "NEFSC BLLS")
#### Finalize sampling data inputs ####
# Save sampling data
survs <- dplyr::select(ex4,
LON, LAT, TIME, SURVEY, RESPONSE,
AGEGROUP)
#survs$COD_N <- as_units(survs$COD_N, 'counts')
survs$swept <- 1
survs$vessel <- as.numeric(as.factor(survs$SURVEY)) - 1
survs$AGE <- as.numeric(factor(survs$AGEGROUP, levels=c('Age0-2', 'Age2-5', 'Age5+',
'Unknown'))) - 1
survs <- dplyr::select(survs, LON, LAT, TIME, RESPONSE, AGE, vessel, swept)
names(survs) <- c('Lon', 'Lat', 'Year', 'Response_variable',
'Age', 'vessel', 'swept')
survs$Response_variable <- as_units(survs$Response_variable, 'counts')
table(survs$Year)
str(survs)
# Save covariates
covars <- dplyr::select(ex4,
LON, LAT, TIME,
#cobble_P, gravel_P, mud_P, rock_P, sand_P,
#rugos,
BATHY.DEPTH#,
#oisst
)
covars$BATHY.DEPTH[covars$BATHY.DEPTH < 0] <-
covars$BATHY.DEPTH[covars$BATHY.DEPTH < 0] * -1
head(covars)
names(covars) <- c('Lon', 'Lat', 'Year', 'BATHY.DEPTH')
table(covars$Year)
# Rescale covariates to have mean 0 and SD 1 (author rec)
scaled.covars <- covars[,4:ncol(covars)] %>%
mutate(across(where(is.numeric), scale))
head(covars)
str(covars)
# Rescale covariates to have mean 0 and SD 1 (author rec)
scaled.covars <- covars[,4] %>%
mutate(across(where(is.numeric), scale))
# Rescale covariates to have mean 0 and SD 1 (author rec)
scaled.covars <- covars[,4] %>%
mutate(across(BATHY.DEPTH, scale))
# Rescale covariates to have mean 0 and SD 1 (author rec)
scaled.covars <- covars[,4] %>%
mutate(BATHY.DEPTH, scale)
test <- scale(BATHY.DEPTH)
# Save covariates
covars <- dplyr::select(ex4,
LON, LAT, TIME,
cobble_P, gravel_P, mud_P, rock_P, sand_P,
rugos,
BATHY.DEPTH,
oisst
)
covars$BATHY.DEPTH[covars$BATHY.DEPTH < 0] <-
covars$BATHY.DEPTH[covars$BATHY.DEPTH < 0] * -1
names(covars) <- c('Lon', 'Lat', 'Year', 'BATHY.DEPTH')
table(covars$Year)
# Test correlation
# Create correlation matrix
df_cormat <- dplyr::select(covars, BATHY.DEPTH, rugos, sand_P, rock_P, mud_P,
gravel_P, cobble_P, oisst)
model.matrix(~0+., data=df_cormat) %>%
cor(use="all.obs", method="spearman") %>%
ggcorrplot(show.diag = F, type="lower", lab=TRUE, lab_size=3)
# Save covariates
covars <- dplyr::select(ex4,
LON, LAT, TIME,
cobble_P, gravel_P, mud_P, rock_P, sand_P,
rugos,
BATHY.DEPTH,
oisst
)
covars$BATHY.DEPTH[covars$BATHY.DEPTH < 0] <-
covars$BATHY.DEPTH[covars$BATHY.DEPTH < 0] * -1
names(covars) <- c('Lon', 'Lat', 'Year', names(covars)[4:11])
table(covars$Year)
# Test correlation
# Create correlation matrix
df_cormat <- dplyr::select(covars, BATHY.DEPTH, rugos, sand_P, rock_P, mud_P,
gravel_P, cobble_P, oisst)
model.matrix(~0+., data=df_cormat) %>%
cor(use="all.obs", method="spearman") %>%
ggcorrplot(show.diag = F, type="lower", lab=TRUE, lab_size=3)
# Rescale covariates to have mean 0 and SD 1 (author rec)
scaled.covars <- covars[,4:ncol(covars)] %>%
mutate(across(where(is.numeric), scale))
scaled.covars <- cbind(covars[,1:3], scaled.covars)
summary(scaled.covars)
scaled.covars <- data.frame(
Lon         = as.numeric(scaled.covars$Lon),
Lat         = as.numeric(scaled.covars$Lat),
Year        = as.numeric(scaled.covars$Year),
cobble_P    = as.numeric(scaled.covars$cobble_P),
gravel_P    = as.numeric(scaled.covars$gravel_P),
mud_P       = as.numeric(scaled.covars$mud_P),
rock_P      = as.numeric(scaled.covars$rock_P),
sand_P      = as.numeric(scaled.covars$sand_P),
rugos       = as.numeric(scaled.covars$rugos),
BATHY.DEPTH = as.numeric(scaled.covars$BATHY.DEPTH),
oisst       = as.numeric(scaled.covars$oisst)
)
str(scaled.covars)
scaled.covars <- dplyr::select(scaled.covars,
Lon, Lat, BATHY.DEPTH)
#### Make settings ####
user_region <- readRDS(here('data/RData_Storage/user_region_all.rds'))
user_region$STRATA <- 'All'
user_region$Id <- NULL; user_region$row <- NULL
user_region <- user_region[with(user_region, order(Lon, Lat)),]
row.names(user_region) <- NULL
head(user_region)
strata_use <- data.frame('STRATA' = c("All"))
# Remove intermediates
rm(covars, ex, ex2, surveys, surveys2, sus, badtab,
surveys.list, i, `%notin%`, df_cormat, temp, temp.list, f, sacrifices,
alllocs, badtab2, ex.f, ex5, shit, bads, checktab, j, reponses, responses)
rm(df, env, rugos)
gc()
setwd(here('data/RData_Storage'))
#### Start from here ####
#m(list=ls())
gc()
library(VAST)
library(here)
library(tidyverse)
library(beepr)
setwd(here('data/RData_Storage'))
setwd(here("VAST_runs/StrataDensCats_7_BathyOnly"))
# Set year labels
year.labs <- c(seq(1982, 2021, 1), seq(1982, 2021, 1))
year.labs <- year.labs[order(year.labs)]
seas.labs <- rep(c('Spring', 'Fall'), 40)
year.labs <- paste0(year.labs, " ", seas.labs)
# Make settings
settings <- make_settings(
n_x = 200,
purpose = "index2",
Region = "User",
fine_scale = TRUE,
bias.correct = FALSE,
knot_method = "grid"
)
#settings$ObsModel[1] <- 14
fit = fit_model(
# Call settings
settings = settings,
# Call survey data info
Lat_i = survs[,'Lat'],
Lon_i = survs[,'Lon'],
t_i = survs[,'Year'],
b_i = survs[,'Response_variable'],
a_i = survs[,'swept'],
v_i = survs[,'vessel'],
c_iz = survs[,'Age'],
#e_i = as.numeric(survs[,'Data_type']-1),
# Call catchability info
# Q1_formula = Q1_formula,
# catchability_data  = catchability_data,
# Call covariate info
X1_formula = ~ #gravel_P + cobble_P + mud_P + sand_P + # rock_P +
BATHY.DEPTH, #+ oisst + rugos,
X2_formula = ~ #gravel_P + cobble_P + mud_P + sand_P + # rock_P +
BATHY.DEPTH, #+ oisst + rugos,
covariate_data = scaled.covars,
# Call spatial
input_grid=user_region,
# Set naming conventions
category_names = c('Ages [0-2)', 'Ages [2-5)',
'Ages [5+]', 'Unknown Ages'),
year_labels = year.labs,
# Tell model to run
run_model = TRUE)
head(scaled.covars)
# Rescale covariates to have mean 0 and SD 1 (author rec)
scaled.covars <- covars[,4:ncol(covars)] %>%
mutate(across(where(is.numeric), scale))
#### Workspace setup ####
# Clear workspace
rm(list=ls())
# Load libraries
# IMPORTANT NOTE: VAST must be running >=V14, will not work with V13.
library(units)
library(VAST)
library(here)
library(tidyverse)
library(beepr)
library(sf)
library(rgdal)
library(sp)
library(ggcorrplot)
# Set GGplot auto theme
theme_set(theme(panel.grid.major = element_line(color='lightgray'),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(color='black', size=1, fill=NA),
legend.position = "bottom",
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14, angle=90, vjust=2),
plot.title=element_text(size=14, hjust = 0, vjust = 1.2),
plot.caption=element_text(hjust=0, face='italic', size=12)))
# Negate function
'%notin%' <- function(x,y)!('%in%'(x,y))
#### Add sample information and covars ####
# Load data
surveys <- read.csv(here("data/Dataframes/Bio_Data_Agesep3.csv"))
# Remove data from 2022 (incomplete)
ex <- subset(surveys, YEAR < 2022)
ex$RESPONSE <- ceiling(ex$AGE_N)
#ex <- subset(ex, AGEGROUP == 'Age2-5' | AGEGROUP == 'Age5+')
# Check that there are no missing responses
nrow(ex[is.na(ex$RESPONSE)==TRUE,])
#nrow(ex[is.na(ex$Data_type)==TRUE,])
# Add environmental data
env <- readRDS(here("data/RData_Storage/agg_stn_all_OISST.RDS"))
env <- sfheaders::sf_to_df(env, fill=T)
env <- dplyr::select(env,
HAUL_ID, cobble_P, gravel_P, rock_P, mud_P, sand_P,
BATHY.DEPTH, oisst)
ex2 <- left_join(ex, env, by="HAUL_ID")
# Add annoying rugosity data
rugos <- readRDS(here("data/RData_Storage/agg_stn_all_OISST_agesep2.RDS"))
rugos <- sfheaders::sf_to_df(rugos, fill=T)
rugos <- dplyr::select(rugos, HAUL_ID, rugos)
rugos <- unique(rugos)
ex3 <- left_join(ex2, rugos, by="HAUL_ID")
ex4 <- subset(ex3, !is.na(ex3$rugos))
# Remove BLLS
ex4 <- subset(ex4, SURVEY != "NEFSC BLLS")
#### Finalize sampling data inputs ####
# Save sampling data
survs <- dplyr::select(ex4,
LON, LAT, TIME, SURVEY, RESPONSE,
AGEGROUP)
#survs$COD_N <- as_units(survs$COD_N, 'counts')
survs$swept <- 1
survs$vessel <- as.numeric(as.factor(survs$SURVEY)) - 1
# vessel    survey
# 0         ASMFC Shrimp Trawl
# 1         DFO Trawl
# 2         GSO Trawl
# 3         MADMF Industry
# 4         MADMF Inshore Trawl
# 5         ME-NH Inshore Trawl
# 6         NEFSC BTS
# 7         RIDEM Trawl
# 8         Sentinel
# 9         SMAST Video Trawl
#survs$Data_type <- factor(survs$Data_type, levels=c("Count", "Biomass_KG"))
survs$AGE <- as.numeric(factor(survs$AGEGROUP, levels=c('Age0-2', 'Age2-5', 'Age5+',
'Unknown'))) - 1
# Age 2 - 5: 0
# Age 5+   : 1
survs <- dplyr::select(survs, LON, LAT, TIME, RESPONSE, AGE, vessel, swept)
names(survs) <- c('Lon', 'Lat', 'Year', 'Response_variable',
'Age', 'vessel', 'swept')
survs$Response_variable <- as_units(survs$Response_variable, 'counts')
table(survs$Year)
str(survs)
# Save covariates
covars <- dplyr::select(ex4,
LON, LAT, TIME,
cobble_P, gravel_P, mud_P, rock_P, sand_P,
rugos,
BATHY.DEPTH,
oisst
)
covars$BATHY.DEPTH[covars$BATHY.DEPTH < 0] <-
covars$BATHY.DEPTH[covars$BATHY.DEPTH < 0] * -1
names(covars) <- c('Lon', 'Lat', 'Year', names(covars)[4:11])
table(covars$Year)
# Test correlation
# Create correlation matrix
df_cormat <- dplyr::select(covars, BATHY.DEPTH, rugos, sand_P, rock_P, mud_P,
gravel_P, cobble_P, oisst)
model.matrix(~0+., data=df_cormat) %>%
cor(use="all.obs", method="spearman") %>%
ggcorrplot(show.diag = F, type="lower", lab=TRUE, lab_size=3)
# Rescale covariates to have mean 0 and SD 1 (author rec)
scaled.covars <- covars[,4:ncol(covars)] %>%
mutate(across(where(is.numeric), scale))
scaled.covars <- cbind(covars[,1:3], scaled.covars)
summary(scaled.covars)
scaled.covars <- data.frame(
Lon         = as.numeric(scaled.covars$Lon),
Lat         = as.numeric(scaled.covars$Lat),
Year        = as.numeric(scaled.covars$Year),
cobble_P    = as.numeric(scaled.covars$cobble_P),
gravel_P    = as.numeric(scaled.covars$gravel_P),
mud_P       = as.numeric(scaled.covars$mud_P),
rock_P      = as.numeric(scaled.covars$rock_P),
sand_P      = as.numeric(scaled.covars$sand_P),
rugos       = as.numeric(scaled.covars$rugos),
BATHY.DEPTH = as.numeric(scaled.covars$BATHY.DEPTH),
oisst       = as.numeric(scaled.covars$oisst)
)
str(scaled.covars)
scaled.covars <- dplyr::select(scaled.covars,
Lon, Lat, Year, BATHY.DEPTH)
#### Year subset for testing ####
#survs <- subset(survs, Year > 2001)
#scaled.covars <- subset(scaled.covars, Year > 2001)
#### Make settings ####
user_region <- readRDS(here('data/RData_Storage/user_region_all.rds'))
user_region$STRATA <- 'All'
user_region$Id <- NULL; user_region$row <- NULL
user_region <- user_region[with(user_region, order(Lon, Lat)),]
row.names(user_region) <- NULL
head(user_region)
strata_use <- data.frame('STRATA' = c("All"))
# Remove intermediates
rm(covars, ex, ex2, surveys, surveys2, sus, badtab,
surveys.list, i, `%notin%`, df_cormat, temp, temp.list, f, sacrifices,
alllocs, badtab2, ex.f, ex5, shit, bads, checktab, j, reponses, responses)
rm(df, env, rugos)
gc()
setwd(here('data/RData_Storage'))
#save.image('shortcut_VAST_data2.RData')
#### Start from here ####
#m(list=ls())
gc()
library(VAST)
library(here)
library(tidyverse)
library(beepr)
setwd(here('data/RData_Storage'))
#save.image('shortcut_VAST_data.RData')
#load(here('data/RData_Storage/shortcut_VAST_data2.RData'))
setwd(here("VAST_runs/StrataDensCats_7_BathyOnly"))
#### Run model ####
# Subsample
#survs <- survs[survs$Year < 1993,]
#scaled.covars <- scaled.covars[scaled.covars$Year < 1993,]
# Set year labels
year.labs <- c(seq(1982, 2021, 1), seq(1982, 2021, 1))
year.labs <- year.labs[order(year.labs)]
seas.labs <- rep(c('Spring', 'Fall'), 40)
year.labs <- paste0(year.labs, " ", seas.labs)
# Make settings
settings <- make_settings(
n_x = 200,
purpose = "index2",
Region = "User",
fine_scale = TRUE,
bias.correct = FALSE,
knot_method = "grid"
)
#settings$ObsModel[1] <- 14
fit = fit_model(
# Call settings
settings = settings,
# Call survey data info
Lat_i = survs[,'Lat'],
Lon_i = survs[,'Lon'],
t_i = survs[,'Year'],
b_i = survs[,'Response_variable'],
a_i = survs[,'swept'],
v_i = survs[,'vessel'],
c_iz = survs[,'Age'],
#e_i = as.numeric(survs[,'Data_type']-1),
# Call catchability info
# Q1_formula = Q1_formula,
# catchability_data  = catchability_data,
# Call covariate info
X1_formula = ~ #gravel_P + cobble_P + mud_P + sand_P + # rock_P +
BATHY.DEPTH, #+ oisst + rugos,
X2_formula = ~ #gravel_P + cobble_P + mud_P + sand_P + # rock_P +
BATHY.DEPTH, #+ oisst + rugos,
covariate_data = scaled.covars,
# Call spatial
input_grid=user_region,
# Set naming conventions
category_names = c('Ages [0-2)', 'Ages [2-5)',
'Ages [5+]', 'Unknown Ages'),
year_labels = year.labs,
# Tell model to run
run_model = TRUE)
beep(8)
#### Plot results ####
save.image('strata_cats_7_bathyonly.RData')
plot( fit )
beep(8)
