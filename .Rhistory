grid$c2 <- factor(grid$c2, levels=c('Low', 'High'))
p <- ggplot(coast) +
geom_sf(data = grid , aes(fill = c2)) +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")+
scale_fill_viridis_d(option = "viridis", direction=1,
na.value = NA, name='Likelihood') +
ggtitle(paste0(substrates[i], ' likelihood')) +
xlab('Longitude') +
ylab('Latitude')
plot(p)
# Save
# ggsave(p,
#        filename =
#          paste0("C:/Users/klankowicz/Desktop/",
#                 substrates[i],
#                 '.png'),
#        device="png")
rm(data.use, data_noNA, c, lo, hi)
}
data.cats_noNA <- data.cats[complete.cases(data.cats),]
for(i in 1:ncol(data.cats_noNA)){
data.cats_noNA[,i] <- as.numeric(data.cats_noNA[,i])
}
head(data.cats)
summary(data.cats)
table(data.cats)
colnames(data.f) <- substrates
data.f[complete.cases(data.f),] <- data.cats[complete.cases(data.cats),]
head(data.cats)
head(data.cats_noNA)
summary(data.cats_nonA)
summary(data.cats_noNA)
summary(data.cats_noNA, na.rm=T)
table(data.cats_noNA)
table(data.cats_noNA$Cobble)
data.cats_noNA$Cobble
data.cats_noNA <- data.cats[complete.cases(data.cats),]
data.cats_noNA$Cobble
for(i in 1:ncol(data.cats_noNA)){
data.cats_noNA[,i] <- as.numeric(as.factor(data.cats_noNA[,i]))
}
data.cats_noNA$Cobble
data.cats_noNA <- data.cats[complete.cases(data.cats),]
for(i in 1:ncol(data.cats_noNA)){
data.cats_noNA[,i] <- as.numeric(factor(data.cats_noNA[,i],
levels=c('Low', 'High')))
}
data.cats_noNA$Cobble
head(data.cats_noNA)
wss <- rep(NA, 10)
for (i in 2:10){
set.seed(123)
temp <- kmeans(data.cats_noNA, centers = i, nstart=99, iter.max = 99)
wss[i] <- temp$betweenss / temp$totss
}
wss <- wss[-1]
plot(2:10, wss, type="b", xlab="Number of groups",
ylab="Sum of squares within a group")
wss
set.seed(123)
c <- kmeans(data.cats_noNA, centers = 6, nstart= 10, iter.max = 99)
cent.vals <- c$centers
cent.vals <- as.data.frame(cent.vals)
cent.vals$num <- seq(1:6)
cent.vals
c <- kmeans(data.cats_noNA, centers = 7, nstart= 10, iter.max = 99)
cent.vals <- c$centers
cent.vals <- as.data.frame(cent.vals)
cent.vals$num <- seq(1:6)
c <- kmeans(data.cats_noNA, centers = 7, nstart= 10, iter.max = 99)
cent.vals <- c$centers
cent.vals <- as.data.frame(cent.vals)
cent.vals$num <- seq(1:6)
cent.vals$num <- seq(1:7)
cent.vals
c <- kmeans(data.cats_noNA, centers = 8, nstart= 10, iter.max = 99)
cent.vals <- c$centers
cent.vals <- as.data.frame(cent.vals)
cent.vals$num <- seq(1:8)
cent.vals
wss
set.seed(123)
c <- kmeans(data.cats_noNA, centers = 10, nstart= 10, iter.max = 99)
cent.vals <- c$centers
cent.vals <- as.data.frame(cent.vals)
cent.vals$num <- seq(1:10)
data.cats_noNA$c2 <- c$cluster
data.f$c2[is.na(data.f$Cobble)==FALSE] <- c$cluster
head(data.f)
nrow(data.f)
length(c$cluster)
head(data.f)
nrow(data.f)
data.f
nrow(data.f[is.na(data.f$Cobble) == FALSE])
nrow(data.f[is.na(data.f$Cobble) == FALSE],)
nrow(data.f[is.na(data.f$Cobble) == FALSE,])
nrow(data.f[!is.na(data.f$Cobble),])
names(data.f)
table(data.f$Cobble)
length(is.na(data.f$Cobble))
summary(data.f$Cobble)
shit <- as.factor(data.f$Cobble)
summary(shit)
data.f[data.f == "NaN"] <- NA
data.f
data.f$clust[is.na(data.f$Cobble)==FALSE] <- c$cluster
data.f$comb <- paste0("Cobble-",data.f$Cobble, " ",
"Gravel-",data.f$Gravel, " ",
"Sand-", data.f$Sand, " ",
"Mud-",data.f$Mud)
table(data.f$comb)
cent.vals
grid
grid$clust <- data.f$clust
ggplot() +
geom_sf(grid, aes(fill=clust))
ggplot() +
geom_sf(data=grid, aes(fill=clust))
ggplot() +
geom_sf(data=grid, aes(fill=as.factor(clust)))
ggplot() +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
scale_fill_viridis_b(na.value = NA, option='viridis')
ggplot() +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
scale_fill_viridis_d(na.value = NA, option='viridis')
cent.vals
ggplot() +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
scale_fill_viridis_d(na.value = NA, option='viridis') +
facet_wrap(vars(clust))
ggplot() +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
geom_sf(data=grid, fill='lightgray', alpha=0.1)+
scale_fill_viridis_d(na.value = NA, option='viridis') +
facet_wrap(vars(clust))
grid2 <- grid
ggplot() +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
geom_sf(data=grid2, fill='lightgray', alpha=0.1)+
scale_fill_viridis_d(na.value = NA, option='viridis') +
facet_wrap(vars(clust))
ggplot() +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
geom_sf(data=grid2, fill='lightgray', alpha=0.5)+
scale_fill_viridis_d(na.value = NA, option='viridis') +
facet_wrap(vars(clust))
head(grid2)
ggplot() +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
geom_sf(data=grid2, aes(fill=Inc), alpha=0.5)+
scale_fill_viridis_d(na.value = NA, option='viridis') +
facet_wrap(vars(clust))
ggplot() +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
scale_fill_viridis_d(na.value = NA, option='viridis') +
facet_wrap(vars(clust))
ggplot(coast) +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")+
facet_wrap(vars(clust))
cent.vals
cent.vals[with(cent.vals, order(Cobble, Gravel, Sand, Mud)),]
?facet_grid
table(data.f$comb)
table(data.f$total)
data.f$total <- paste0(data.f$comb, "_", data.f$c2)
table(data.f$total)
head(grid)
ggplot(coast) +
geom_sf(data=grid, aes(fill=as.factor(clust))) +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")+
facet_wrap(vars(clust))
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust),], aes(fill=clust)) +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")+
facet_wrap(vars(clust))
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust),]) +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")+
facet_wrap(vars(clust))
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust),], fill='black') +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")+
facet_wrap(vars(clust))
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust),], fill='black', col='black') +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")+
facet_wrap(vars(clust))
cent.vals
hospital_names <- list(
'1'="Sandy-Mud",
'2'="Cobble-Mud",
'3'="Sand",
'4'="Gravel-Mud",
'5'="Cobble-Gravel-Sand",
'6'="Indefinite",
'7'="Gravel-Sand",
'8'="Gravel",
'9'="Mud",
'10'="Gravel-Sand-Mud"
)
hospital_labeller <- function(variable,value){
return(hospital_names[value])
}
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust),], fill='black', col='black') +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")+
facet_wrap(vars(clust), labeller = hospital_labeller)
cent.vals
cent.vals[with(cent.vals, order(Cobble, Gravel, Sand)),]
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust) & grid$clust %in% c(4,8,7,10,9,2,3),], fill='black', col='black') +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")
cent.vals
cent.vals[with(cent.vals, order(Cobble, Gravel, Sand)),]
?order
cent.vals[with(cent.vals, order(Cobble, Gravel, Sand, decreasing = F)),]
cent.vals[with(cent.vals, order(Cobble,decreasing = F)),]
cent.vals[with(cent.vals, order(Cobble,decreasing = T)),]
cent.vals[with(cent.vals, order(Cobble, Gravel, Sand, decreasing = T)),]
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust) & grid$clust %in% c(5,2),], fill='black', col='black') +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust) & grid$clust %in% c(7,8,4,10),], fill='black', col='black') +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")
cent.vals[with(cent.vals, order(Cobble, Gravel, Sand, decreasing = T)),]
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust) & grid$clust %in% c(1,3,6,9),], fill='black', col='black') +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")
# Plot
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$clust) & grid$clust %in% c(9),], fill='black', col='black') +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")
cent.vals[with(cent.vals, order(Cobble, Gravel, Sand, decreasing = T)),]
grid$outcome <- NA
grid$outcome[grid$clust %in% c(5,2)] <- 'Hard'
grid$outcome <- NA
grid$outcome[grid$clust %in% c(5,2)] <- 'Hard'
grid$outcome[grid$clust %in% c(7,8,4,10)] <- 'Mix'
grid$outcome[grid$clust %in% c(1,3,6,9)] <- 'Soft'
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$outcome),], aes(fill=as.factor(outcome))) +
scale_fill_viridis_d(na.value = NA, option='viridis') +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")
ggplot(coast) +
geom_sf(data=grid[!is.na(grid$outcome),], aes(fill=as.factor(outcome))) +
scale_fill_viridis_d(na.value = NA, option='viridis', name="Bottom") +
geom_sf() +
coord_sf(xlim=c(-125*1000, 780*1000),
ylim=c(4050*1000,5000*1000),
crs="EPSG:32619")
in.rocks <- surveys[st_intersects(surveys, grid[grid$outcome == "Hard",],
sparse=F),]
in.mix <- surveys[st_intersects(surveys, grid[grid$outcome == "Mix",],
sparse=F),]
in.soft <- surveys[st_intersects(surveys, grid[grid$outcome == "Soft",],
sparse=F),]
table(in.rocks$SURVEY)
head(in.rocks)
st_crs(survey)
st_crs(surveys)
st_crs(grid)
st_crs(grid) == st_crs(survey)
st_crs(grid) == st_crs(surveys)
surveys
grid
st_bbox(grid)
st_bbox(surveys)
hard <- grid[grid$outcome == "Hard",]
in.hard <- surveys[st_intersects(surveys, hard,
sparse=F),]
mix <- grid[grid$outcome == "Mix",]
in.mix <- surveys[st_intersects(surveys, mix,
sparse=F),]
soft <- grid[grid$outcome == "Soft",]
in.soft <- surveys[st_intersects(surveys, soft,
sparse=F),]
table(in.rocks$SURVEY)
in.hard
hard
grid
grid$geometry <- grid$grid
hard <- grid[grid$outcome == "Hard",]
in.hard <- surveys[st_intersects(surveys, hard,
sparse=F),]
table(in.hard)
table(in.hard$SURVEY)
in.hard
hard
grid
grid$grid <- NULL
grid
names(grid)
hard <- grid[grid$outcome == "Hard",]
in.hard <- surveys[st_intersects(surveys, hard,
sparse=F),]
class(grid)
grid
head(grid)
shit <- grid$geometry
shit
str(shit)
shit <- rbind(shit, grid$outcome)
str(shit)
class(shit)
shit
shit
shit <- grid$geometry
shit$outcome <- grid$outcome
class(shit)
shit
hard <- shit[shit$outcome == "Hard",]
shit
shit$``
shit$outcome
head(shit)
shit
# Set up workspace
rm(list=ls())
gc()
# Libraries
library(tidyverse)
library(sf)
library(here)
library(fastcluster)
library(fasterize)
library(VAST)
library(rgeoda)
library(geodaData)
library(sp)
library(raster)
# Set GGplot auto theme
theme_set(theme(plot.margin = unit(c(0,0,0,0), "cm"),
panel.grid.major = element_line(color='lightgray'),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(color='black', size=1, fill=NA),
legend.title = element_text(size=12),
legend.text = element_text(size=10),
legend.background = element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14, angle=90, vjust=2),
plot.title=element_text(size=16, hjust = 0, vjust = 1.2),
plot.caption=element_text(hjust=0, face='italic', size=12)))
# Adjust ecodata coast projection
coast <- ecodata::coast
coast <- st_transform(coast, crs = "EPSG:32619")
# Surveys
surveys <- read.csv(here("data/Dataframes/Survey_Data.csv"))
surveys <- subset(surveys, !is.na(LAT))
surveys <- subset(surveys, YEAR > 1981)
surveys <- st_as_sf(surveys, coords=c('LON', 'LAT'))
st_crs(surveys) <- 'EPSG:4326'
surveys <- st_transform(surveys, crs = "EPSG:32619")
# Closed areas
closed.areas <- st_read(here("data/GIS/closed_areas_wgs.shp"))
closed.areas <- st_transform(closed.areas, crs="EPSG:32619")
# VAST Output
load(here("VAST_runs/StrataDensCats_7/strata_cats_7.RData"))
# Make VAST grid (2000 cells)
projargs <- fit$extrapolation_list$projargs
projargs
head(fit$extrapolation_list)
head(fit$extrapolation_list$Data_Extrap)
CRS_orig = sp::CRS("+proj=longlat")
CRS_proj = sp::CRS("+init=epsg:32619")
rm(projargs)
# Make VAST grid (2000 cells)
CRS_orig = sp::CRS("+proj=longlat")
CRS_proj = sp::CRS("+init=epsg:32619")
loc_g <- cbind(fit$extrapolation_list$Data_Extrap[,"Lon"],
fit$extrapolation_list$Data_Extrap[,"Lat"])
n_cells <- dim(loc_g)[1]
Points_orig = sp::SpatialPointsDataFrame(coords = loc_g,
data = data.frame(Inc = rep(1, nrow(loc_g))),
proj4string = CRS_orig)
Points_LongLat = sp::spTransform(Points_orig, sp::CRS("+proj=longlat"))
Points_proj = sp::spTransform(Points_orig, CRS_proj)
cell.size = mean(diff(Points_proj@bbox[1, ]),
diff(Points_proj@bbox[2,]))/floor(sqrt(n_cells))
Points_sf = sf::st_as_sf(Points_proj)
grid = sf::st_make_grid(Points_sf, cellsize = cell.size)
grid
grid_i = sf::st_intersects(Points_sf, grid)
grid = sf::st_sf(grid, Inc = tapply(Points_sf$Inc,
INDEX = factor(as.numeric(grid_i),
levels = 1:length(grid)),
FUN = mean, na.rm = TRUE))
grid
grid <- sfheaders::sf_to_df(grid)
head(grid)
grid = sf::st_make_grid(Points_sf, cellsize = cell.size)
grid_i = sf::st_intersects(Points_sf, grid)
grid = sf::st_sf(grid, Inc = tapply(Points_sf$Inc,
INDEX = factor(as.numeric(grid_i),
levels = 1:length(grid)),
FUN = mean, na.rm = TRUE))
grid <- sfheaders::sf_to_df(grid, fill=T)
head(grid)
grid <- dplyr::select(grid, x, y, Inc)
grid <- st_as_sf(grid, coords=c('x', 'y'))
grid
ggplot() +
geom_sf(grid, aes(fill=Inc))
ggplot() +
geom_sf(data=grid, aes(fill=Inc))
st_crs(grid)
st_crs(grid) <- "EPSG:32619"
ggplot() +
geom_sf(data=grid, aes(fill=Inc))
grid
grid = sf::st_make_grid(Points_sf, cellsize = cell.size)
grid_i = sf::st_intersects(Points_sf, grid)
grid = sf::st_sf(grid, Inc = tapply(Points_sf$Inc,
INDEX = factor(as.numeric(grid_i),
levels = 1:length(grid)),
FUN = mean, na.rm = TRUE))
grid
st_crs(grid)
st_crs(grid) == st_crs(closed.areas)
names(grid)
names(grid) <- c('Inc', 'geometry')
# Remove intermediates
rm(CRS_orig, CRS_proj, ex3, ex4, fit, grid_i, loc_g,
Points_LongLat, Points_orig, Points_proj, Points_sf,
scaled.covars, settings, strata_use, survs, user_region, cell.size,
n_cells, projargs, seas.labs, year.labs)
# Add columns for mean sediment values
grid$cobble <- NA; grid$gravel <- NA; grid$mud <- NA
grid$sand <- NA; grid$rock <- NA
head(grid)
grid
grid = sf::st_make_grid(Points_sf, cellsize = cell.size)
grid_i = sf::st_intersects(Points_sf, grid)
grid = sf::st_sf(grid, Inc = tapply(Points_sf$Inc,
INDEX = factor(as.numeric(grid_i),
levels = 1:length(grid)),
FUN = mean, na.rm = TRUE))
colnames(grid) <- c('Inc', 'geometry')
# Make VAST grid (2000 cells)
CRS_orig = sp::CRS("+proj=longlat")
CRS_proj = sp::CRS("+init=epsg:32619")
loc_g <- cbind(fit$extrapolation_list$Data_Extrap[,"Lon"],
fit$extrapolation_list$Data_Extrap[,"Lat"])
